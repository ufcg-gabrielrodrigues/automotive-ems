component back_emf
    % Alternator Back EMF
    % Description.
    
    inputs
        i_f = 0;            % Excitation current:left
        n_r = { 0, 'rpm' };	% Rotor speed:left
    end
    outputs
        e_a = { 0, 'V' };	% Back EMF (phase A):right
        e_b = { 0, 'V' };	% Back EMF (phase B):right
        e_c = { 0, 'V' };	% Back EMF (phase C):right
    end
    parameters
        p = 1;	% Number of pole pairs
    end
    variables
        theta_r = { 0, 'rad' };     % Rotor position
        omega_r = { 0, 'rad/s' };	% Rotor speed
        omega_a = { 0, 'rad/s' };	% Alternator electrical frequency
        e = { 0, 'rpm' };           % Back EMF peak
    end
    function setup
        if (floor(p) ~= p)
            error( 'Number of pole pairs must be integer' )
        end

        if (p <= 0)
            error( 'Number of pole pairs must be greater than zero' )
        end
    end
    equations
        omega_r == n_r*2*pi/60;
        theta_r == integ(omega_r);
        omega_a == p*omega_r;
        e == 0;
        e_a == e*cos(omega_a*time + theta_r)*{1, 'V/rpm'};
        e_b == e*cos(omega_a*time + theta_r + 2*pi/3)*{1, 'V/rpm'};
        e_c == e*cos(omega_a*time + theta_r - 2*pi/3)*{1, 'V/rpm'};
    end
end